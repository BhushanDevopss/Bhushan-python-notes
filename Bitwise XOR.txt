				===================================================
						6. Bitwise XOR ( ^ )
				===================================================

=>Syntax:    varname= Val1 ^ Val2
=>The functionality of Bitwise XOR ( ^ ) is described in the following Truth Table
					=====================================================
						Val1		Val2			Val1^Val2
					=====================================================
						0		1				1
						1		0				1
						0		0				0
						1		1				0
					=====================================================
-------------------------------------------
Example1
-------------------------------------------
>>> 0^1------------------------1
>>> 1^0------------------------1
>>> 0^0------------------------0
>>> 1^1------------------------0
---------------------------------------------
Example2:
---------------------------------------------
>>> True^False----------------True
>>> False^True----------------True
>>> False^False---------------False
>>> True^True------------------False
-------------------------------------------------
Example3:
-------------------------------------------------
>>> "Apple"^"Mango"---------------------TypeError: unsupported operand type(s) for ^: 'str' and 'str'
>>> 1.2^2.3------------------------------------TypeError: unsupported operand type(s) for ^: 'float' and 'float'
------------------------------------------------------
Examples4
------------------------------------------------------
>>> a=3
>>> b=2
>>> c=a^b
>>> print(c)---------------------------1
>>> print(10^15)--------------------5
>>> print(3^4)-----------------------7
-----------------------
Examples5
-----------------------
>>> s1={10,20,30}
>>> s2={30,40,50}
>>> s3=s1.symmetric_difference(s2)
>>> print(s3,type(s3))----------------------------{40, 10, 50, 20} <class 'set'>
----------------------------------------
>>> s1={10,20,30}
>>> s2={30,40,50}
>>> s3=s1^s2  # Bitwise XOR (^) 
>>> print(s3,type(s3))-------------------------{40, 10, 50, 20} <class 'set'>
----------------------------------------------
>>> s1={1.2,3.4}
>>> s2={2.3,3.4}
>>> s3=s1^s2  # Bitwise XOR (^) 
>>> print(s3,type(s3))-----------------{1.2, 2.3} <class 'set'>
--------------------OR-------------------------------------
>>> s1={1.2,3.4}
>>> s2={2.3,3.4}
>>> s3=(s1|s2)-(s1&s2)  # Bitwise XOR (^) = Bitwise (|) -  Bitwise AND (&)
>>> print(s3,type(s3))--------{1.2, 2.3} <class 'set'>
================================================================================