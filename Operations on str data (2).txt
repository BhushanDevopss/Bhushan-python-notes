		========================================================
				Operations on str data
		========================================================
=>On str data, we can perform Two Types of Operations. They are
			
			1. Indexing Operation
			2. Slicing Operation
--------------------------------------------------------------------------------------------------------------------------------------------	
1. Indexing Operation
--------------------------------------------------------------------------------------------------------------------------------------------	
=>The Process of Obtaining One Value / Char at a time from StrObject by passing Valid Index is called 
    Indexing.
=>Syntax:    StrObj[Index]
=>Here This Syntax give One Value from StrObj which is Present at Specified Index.
=>Here Index can be Either +Ve or  -Ve
=>When we Enter Invalid Index then we get IndexError.
-----------------------------------------------------------------------------------------------------------------
Examples
-----------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------------PYTHON <class 'str'>
>>> print(s[0])---------------------------P
>>> print(s[2])---------------------------T
>>> print(s[4])---------------------------O
>>> print(s[5])---------------------------N
----------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------PYTHON <class 'str'>
>>> s[-1]--------------------------------'N'
>>> s[-3]--------------------------------'H'
>>> s[-6]--------------------------------'P'
>>> s[-4]---------------------------------'T'
>>> s[-5]---------------------------------'Y'
>>> s[-2]---------------------------------'O'
------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))----------------PYTHON <class 'str'>
>>> s[10]------------------------------IndexError: string index out of range
>>> s[-7]-------------------------------IndexError: string index out of range
----------------------------------------------
MOST IMP
-----------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))----------------------PYTHON <class 'str'>
>>> s[len(s)]-------------------------------IndexError: string index out of range
>>> s[len(s)-1]----------------------------'N'
>>> s[-len(s)-1]----------------------------IndexError: string index out of range
>>> s[-len(s)]-------------------------------'P'
>>> s[len(s)-len(s)]----------------------'P'
==============================================================================
2. Slicing Operation
==============================================================================
=>The Process of Obtaining Range of Values OR Sub String from Main StrObj is called Slicing Operation.
=>We can use Slicing Operation with 5 Syntaxes. They are
-----------------------------------------------------------------------------------------------------------------------------------------
Syntax-1:   StrObj[BEGIN:END]
-----------------------------------------------------------------------------------------------------------------------------------------
=>This Syntax Generates OR Obtains Range of Values OR Sub String from BEGIN to END-1 Provided BEGIN < END otherwise we get ' ' (Space) as Result.
-----------------------------------
Examples
----------------------------------
>>>s="PYTHON"
>>> print(s,type(s))----------------------PYTHON <class 'str'>
>>> s[0:3]-----------------------------------'PYT'
>>> s[0:5]-----------------------------------'PYTHO'
>>> s[2:5]-----------------------------------'THO'
>>> s[4:5]------------------------------------'O'
>>> s[4:6]------------------------------------'ON'
>>> s[0:6]------------------------------------'PYTHON'
>>> s[6:3]-------------------------------------' '
>>> s[3:1]-------------------------------------' '
------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))---------------------------PYTHON <class 'str'>
>>> s[-6:-2]--------------------------------------'PYTH'
>>> s[-5:-1]--------------------------------------'YTHO'
>>> s[-6:-3]--------------------------------------'PYT'
>>> s[-3:-1]---------------------------------------'HO'
>>> s[-5:-2]---------------------------------------'YTH'
>>> s[-2:-6]---------------------------------------' '
>>> s[-1:-5]---------------------------------------' ' 
----------------------------------------
MOST IMP
---------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))------------------PYTHON <class 'str'>
>>> s[2:122]----------------------------'THON'
>>> s[0:355]----------------------------'PYTHON'
>>> s[355:0]----------------------------' '
---------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))-------------------PYTHON <class 'str'>
>>> s[2:122]----------------------------'THON'
>>> s[0:355]----------------------------'PYTHON'
>>> s[355:0]-----------------------------' '
>>> s[-125:-2]---------------------------'PYTH'
>>> s[-1000:-5]--------------------------'P'
>>> s[-50:-3]------------------------------'PYT'
>>> s[-2000:-4]---------------------------'PY'
>>> s[-4:-123]----------------------------'  '
>>> s[-6:-45]------------------------------' '
--------------------------------------------------------------
MOST MOST IMP POINTS
--------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------PYTHON <class 'str'>
>>> s[1:-2]-----------------------------'YTH'
>>> s[2:-1]-----------------------------'THO'
>>> s[0:-1]-----------------------------'PYTHO'
>>> s[3:-1]-----------------------------'HO'
>>> s[-5:4]-----------------------------'YTH'
>>> s[-6:6]-----------------------------'PYTHON'
>>> s[-6:123]--------------------------'PYTHON'
>>> s[-123:234]-----------------------'PYTHON'
>>> s[-1000:2000]--------------------'PYTHON'
>>> s[4:-5]-------------------------------' '
>>> s[2:-5]-------------------------------' '
>>> s[0:-6]-------------------------------' '
>>> s[0:-5]--------------------------------'P'
-------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))----------------PYTHON <class 'str'>
>>> s[-6:len(s)]---------------------'PYTHON'
>>> s[-len(s):6]---------------------'PYTHON'
>>> s[-len(s):66666]--------------'PYTHON'
>>> s[-6666:len(s)]---------------'PYTHON'
>>> s[6666:len(s)]----------------' '
----------------------------------------------------------------------------------------------------------------------------------
Syntax-2: strobj[BEGIN:]
----------------------------------------------------------------------------------------------------------------------------------
=>In this Syntax, We are Specifying BEGIN Index and Not Specifying END Index.
=>If we Don't  Specify END Index then PVM Takes Upto Last Character
			(OR)
=>If we Don't Specify END Index then PVM Takes End Index as len(strobj)
---------------------------------------------------------------------------------------------------------------------------------
Examples
---------------------------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))-----------------PYTHON <class 'str'>
>>> s[2:]--------------------------------'THON'
>>> s[3:]--------------------------------'HON'
>>> s[1:]---------------------------------'YTHON'
>>> s[4:]---------------------------------'ON'
>>> s[5:]---------------------------------'N'
>>> s[55:]-------------------------------' '
>>> s[155:]-----------------------------' '
------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,type(s))--------------------------PYTHON <class 'str'>
>>> s[-6:]----------------------------------------'PYTHON'
>>> s[-3:]----------------------------------------'HON'
>>> s[-2:]----------------------------------------'ON'
>>> s[-5:]----------------------------------------'YTHON'
>>> s[-1:]----------------------------------------'N'
>>> s[-123:]-------------------------------------'PYTHON'
>>> s[-1123:]-----------------------------------'PYTHON'
>>> s[-1123:-1123]---------------------------' '
-----------------------------------------------------------------------------------------------------------------------------
Syntax-3: strobj[  :END]--Tomorrow sharp 9:10AM
				

----------------------------------------------------------------------------------------------------------------------------------
